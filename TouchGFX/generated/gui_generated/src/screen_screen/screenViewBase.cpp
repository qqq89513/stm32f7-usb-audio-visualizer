/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_screen/screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"

screenViewBase::screenViewBase()
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    btn_test.setBoxWithBorderPosition(0, 0, 50, 50);
    btn_test.setBorderSize(5);
    btn_test.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    btn_test.setPosition(0, 222, 50, 50);

    graph_t.setScale(10);
    graph_t.setPosition(80, 16, 320, 193);
    graph_t.setGraphAreaMargin(0, 0, 0, 0);
    graph_t.setGraphAreaPadding(0, 0, 0, 0);
    graph_t.setGraphRangeY(-2, 2);

    graph_tLine1.setScale(10);
    graph_tLine1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(21, 197, 20));
    graph_tLine1.setPainter(graph_tLine1Painter);
    graph_tLine1.setLineWidth(2);
    graph_t.addGraphElement(graph_tLine1);

    graph_t.addDataPoint(-0.0451014106031504f);
    graph_t.addDataPoint(0.119620928331756f);
    graph_t.addDataPoint(0.419091594575735f);
    graph_t.addDataPoint(0.75230365517258f);
    graph_t.addDataPoint(1.0045532781091f);
    graph_t.addDataPoint(1.07684363711957f);
    graph_t.addDataPoint(0.91160754100812f);
    graph_t.addDataPoint(0.508390982186796f);
    graph_t.addDataPoint(-0.0744045567035009f);
    graph_t.addDataPoint(-0.732213448279582f);
    graph_t.addDataPoint(-1.33838742581829f);
    graph_t.addDataPoint(-1.77383167359216f);
    graph_t.addDataPoint(-1.95499482080539f);
    graph_t.addDataPoint(-1.85340571233874f);
    graph_t.addDataPoint(-1.50201094616935f);
    graph_t.addDataPoint(-0.986786492934082f);
    graph_t.addDataPoint(-0.425690135837802f);
    graph_t.addDataPoint(0.0598923788942277f);
    graph_t.addDataPoint(0.374229292675193f);
    graph_t.addDataPoint(0.469758166235534f);
    graph_t.addDataPoint(0.357558867681527f);
    graph_t.addDataPoint(0.103266466043558f);
    graph_t.addDataPoint(-0.190519726637946f);
    graph_t.addDataPoint(-0.410964463978605f);
    graph_t.addDataPoint(-0.464253314205399f);
    graph_t.addDataPoint(-0.300150030067316f);
    graph_t.addDataPoint(0.0742210730844359f);
    graph_t.addDataPoint(0.594801907902907f);
    graph_t.addDataPoint(1.15518371764927f);
    graph_t.addDataPoint(1.63182060159137f);
    graph_t.addDataPoint(1.91373346474001f);
    graph_t.addDataPoint(1.92945362651606f);
    graph_t.addDataPoint(1.6646183641744f);
    graph_t.addDataPoint(1.16590656626045f);
    graph_t.addDataPoint(0.530334177448488f);
    graph_t.addDataPoint(-0.117498639515023f);
    graph_t.addDataPoint(-0.654677494212266f);
    graph_t.addDataPoint(-0.988644629606831f);
    graph_t.addDataPoint(-1.07830679366845f);
    graph_t.addDataPoint(-0.942474823566644f);
    graph_t.addDataPoint(-0.653633043813776f);
    graph_t.addDataPoint(-0.318628490716589f);
    graph_t.addDataPoint(-0.0510709910537953f);
    graph_t.addDataPoint(0.0577420420424041f);
    graph_t.addDataPoint(-0.0377934891965089f);
    graph_t.addDataPoint(-0.325666902669751f);
    graph_t.addDataPoint(-0.738739687907732f);
    graph_t.addDataPoint(-1.17105010917087f);
    graph_t.addDataPoint(-1.50394874698215f);
    graph_t.addDataPoint(-1.63565850978723f);
    graph_t.addDataPoint(-1.50700134120991f);
    graph_t.addDataPoint(-1.11696090583271f);
    graph_t.addDataPoint(-0.524227477939158f);
    graph_t.addDataPoint(0.165704005823547f);
    graph_t.addDataPoint(0.82478303128748f);
    graph_t.addDataPoint(1.33212548338031f);
    graph_t.addDataPoint(1.60199622149185f);
    graph_t.addDataPoint(1.60326626386468f);
    graph_t.addDataPoint(1.36564089681518f);
    graph_t.addDataPoint(0.971190189919984f);
    graph_t.addDataPoint(0.533302925682482f);
    graph_t.addDataPoint(0.168254731047096f);
    graph_t.addDataPoint(-0.0336215938791763f);
    graph_t.addDataPoint(-0.0300908787621812f);
    graph_t.addDataPoint(0.162930483403734f);
    graph_t.addDataPoint(0.475871452300649f);
    graph_t.addDataPoint(0.803429456867034f);
    graph_t.addDataPoint(1.03149543697348f);
    graph_t.addDataPoint(1.06644381148054f);
    graph_t.addDataPoint(0.859561699747703f);
    graph_t.addDataPoint(0.420576381654674f);
    graph_t.addDataPoint(-0.183094526386263f);
    graph_t.addDataPoint(-0.841252457696613f);
    graph_t.addDataPoint(-1.42639908959031f);
    graph_t.addDataPoint(-1.82361125072144f);
    graph_t.addDataPoint(-1.95754826576739f);
    graph_t.addDataPoint(-1.81002439965591f);
    graph_t.addDataPoint(-1.4238791527391f);
    graph_t.addDataPoint(-0.892220642176347f);
    graph_t.addDataPoint(-0.335686671670536f);
    graph_t.addDataPoint(0.126711689681517f);
    graph_t.addDataPoint(0.406040409704595f);
    graph_t.addDataPoint(0.464248983993723f);
    graph_t.addDataPoint(0.322276886360668f);
    graph_t.addDataPoint(0.053523933273716f);
    graph_t.addDataPoint(-0.235660950808742f);
    graph_t.addDataPoint(-0.433634434410437f);
    graph_t.addDataPoint(-0.452420827224528f);
    graph_t.addDataPoint(-0.250826754870557f);
    graph_t.addDataPoint(0.154014446392852f);
    graph_t.addDataPoint(0.689552925511965f);
    graph_t.addDataPoint(1.2445257137409f);
    graph_t.addDataPoint(1.69540636120536f);
    graph_t.addDataPoint(1.93615603758702f);
    graph_t.addDataPoint(1.90401205048588f);
    graph_t.addDataPoint(1.59500655061064f);
    graph_t.addDataPoint(1.06541005076231f);
    graph_t.addDataPoint(0.418727098135095f);
    graph_t.addDataPoint(-0.21860226990508f);
    graph_t.addDataPoint(-0.726888105990117f);

    slider1.setXY(301, 239);
    slider1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
    slider1.setupHorizontalSlider(3, 7, 0, 0, 125);
    slider1.setValueRange(0, 100);
    slider1.setValue(0);

    vu_L.setXY(0, 0);
    vu_L.setProgressIndicatorPosition(0, 0, 20, 184);
    vu_L.setRange(0, 100);
    vu_L.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_ROUND_90_DEGREES_ID));
    vu_LPainter.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 151, 255));
    vu_L.setPainter(vu_LPainter);
    vu_L.setStart(10, 10);
    vu_L.setEnd(10, 174);
    vu_L.setLineWidth(16);
    vu_L.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    vu_L.setValue(60);

    vu_R.setXY(20, 0);
    vu_R.setProgressIndicatorPosition(0, 0, 20, 184);
    vu_R.setRange(0, 100);
    vu_R.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_ROUND_90_DEGREES_ID));
    vu_RPainter.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 151, 255));
    vu_R.setPainter(vu_RPainter);
    vu_R.setStart(10, 10);
    vu_R.setEnd(10, 174);
    vu_R.setLineWidth(16);
    vu_R.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    vu_R.setValue(60);

    add(__background);
    add(btn_test);
    add(graph_t);
    add(slider1);
    add(vu_L);
    add(vu_R);
}

void screenViewBase::setupScreen()
{

}
