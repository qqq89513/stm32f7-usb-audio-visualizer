// 4.15.0 0x8aaf5f00
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_blue_dividers_divider_short[]; // BITMAP_BLUE_DIVIDERS_DIVIDER_SHORT_ID = 0, Size: 352x2 pixels
extern const unsigned char image_blue_textures_carbon_fibre[]; // BITMAP_BLUE_TEXTURES_CARBON_FIBRE_ID = 1, Size: 24x22 pixels
extern const unsigned char image_dark_icons_refresh_48[]; // BITMAP_DARK_ICONS_REFRESH_48_ID = 2, Size: 48x45 pixels
extern const unsigned char image_dark_icons_settings_48[]; // BITMAP_DARK_ICONS_SETTINGS_48_ID = 3, Size: 48x48 pixels
extern const unsigned char image_dark_icons_sound_32[]; // BITMAP_DARK_ICONS_SOUND_32_ID = 4, Size: 34x32 pixels
extern const unsigned char image_dark_slider_horizontal_small_slider_horizontal_small_round_back[]; // BITMAP_DARK_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID = 5, Size: 193x40 pixels
extern const unsigned char image_dark_slider_horizontal_small_slider_horizontal_small_round_fill[]; // BITMAP_DARK_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_FILL_ID = 6, Size: 193x40 pixels
extern const unsigned char image_slider_indicator_blue[]; // BITMAP_SLIDER_INDICATOR_BLUE_ID = 7, Size: 15x15 pixels
extern const unsigned char image_slider_indicator_green[]; // BITMAP_SLIDER_INDICATOR_GREEN_ID = 8, Size: 15x15 pixels
extern const unsigned char image_slider_indicator_red[]; // BITMAP_SLIDER_INDICATOR_RED_ID = 9, Size: 15x15 pixels
extern const unsigned char image_vu_meter[]; // BITMAP_VU_METER_ID = 10, Size: 20x184 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image_blue_dividers_divider_short, 0, 352, 2, 0, 0, 352, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 2, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_blue_textures_carbon_fibre, 0, 24, 22, 0, 0, 24, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 22, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_dark_icons_refresh_48, 0, 48, 45, 39, 11, 7, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_icons_settings_48, 0, 48, 48, 44, 19, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_icons_sound_32, 0, 34, 32, 18, 2, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 26, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_slider_horizontal_small_slider_horizontal_small_round_back, 0, 193, 40, 15, 1, 164, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 38, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_slider_horizontal_small_slider_horizontal_small_round_fill, 0, 193, 40, 15, 1, 164, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 38, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_slider_indicator_blue, 0, 15, 15, 0, 0, 15, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 15, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_slider_indicator_green, 0, 15, 15, 0, 0, 15, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 15, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_slider_indicator_red, 0, 15, 15, 0, 0, 15, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 15, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_vu_meter, 0, 20, 184, 0, 0, 20, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 184, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
