// 4.15.0 0x9eda4c1d
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_blue_progressindicators_bg_medium_progress_indicator_bg_round_90_degrees[]; // BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_ROUND_90_DEGREES_ID = 0, Size: 20x184 pixels
extern const unsigned char image_blue_slider_horizontal_small_indicators_slider_horizontal_small_round_knob[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID = 1, Size: 54x34 pixels
extern const unsigned char image_blue_slider_horizontal_small_slider_horizontal_small_round_back[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID = 2, Size: 172x20 pixels
extern const unsigned char image_blue_slider_horizontal_small_slider_horizontal_small_round_fill[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_FILL_ID = 3, Size: 172x20 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image_blue_progressindicators_bg_medium_progress_indicator_bg_round_90_degrees, 0, 20, 184, 0, 10, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 164, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_slider_horizontal_small_indicators_slider_horizontal_small_round_knob, 0, 54, 34, 8, 4, 38, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 24, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_slider_horizontal_small_slider_horizontal_small_round_back, 0, 172, 20, 10, 0, 152, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_slider_horizontal_small_slider_horizontal_small_round_fill, 0, 172, 20, 10, 0, 152, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
